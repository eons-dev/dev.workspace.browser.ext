name: Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build extension

    steps:
      # -----------------------------------------------------------------------------
      # Checkout repository at the current commit
      # Ensures we have full access to the code and commit metadata
      # -----------------------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -----------------------------------------------------------------------------
      # Install pnpm BEFORE Node setup.
      # This ensures that actions/setup-node can detect pnpm and set up caching.
      # The "run_install: false" flag defers the install step until later.
      # -----------------------------------------------------------------------------
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # -----------------------------------------------------------------------------
      # Setup Node.js (v22) with built-in pnpm cache support.
      # This automatically caches pnpmâ€™s global store between builds,
      # keyed by the hash of your pnpm-lock.yaml.
      # -----------------------------------------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'pnpm'

      # -----------------------------------------------------------------------------
      # Install all dependencies using a frozen lockfile.
      # The --frozen-lockfile flag ensures reproducibility
      # and fails the build if package versions have drifted.
      # -----------------------------------------------------------------------------
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # -----------------------------------------------------------------------------
      # Run your build command. This should generate the "dist" directory
      # containing the compiled extension files.
      # -----------------------------------------------------------------------------
      - name: Build extension
        run: pnpm build

      # -----------------------------------------------------------------------------
      # Upload the generated build artifacts as an action artifact.
      # This allows later workflows (e.g., release) or reviewers
      # to download and inspect the build output directly from the Actions tab.
      # -----------------------------------------------------------------------------
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: eons-dev-launcher-build
          path: dist/
          retention-days: 7
