name: Release

on:
  push:
    tags:
      - "v*"   # Trigger only when pushing version tags, e.g., v1.0.0

jobs:
  release:
    runs-on: ubuntu-latest
    name: Build & publish release

    # -----------------------------------------------------------------------------
    # GitHub requires "contents: write" permission to create or update releases.
    # Without this, the softprops/action-gh-release step will fail with 403 errors.
    # -----------------------------------------------------------------------------
    permissions:
      contents: write

    steps:
      # -----------------------------------------------------------------------------
      # Checkout the repository at the tagged commit so that the built artifacts
      # exactly match the released version.
      # -----------------------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -----------------------------------------------------------------------------
      # Setup pnpm (v9) and enable built-in cache.
      # Handles caching internally to avoid race conditions.
      # -----------------------------------------------------------------------------
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
          cache: true

      # -----------------------------------------------------------------------------
      # Setup Node.js (v22) â€” no cache flag is needed since pnpm manages it.
      # -----------------------------------------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'

      # -----------------------------------------------------------------------------
      # Install dependencies using frozen lockfile for deterministic builds.
      # -----------------------------------------------------------------------------
      - name: Install dependencies
        run: pnpm install

      # -----------------------------------------------------------------------------
      # Run the build command to generate the Chrome and Firefox distributables.
      # -----------------------------------------------------------------------------
      - name: Build Firefox extension
        run: |
          pnpm run build:firefox
          mv eons-dev-launcher dist-firefox

      - name: Build Chrome extension
        run: |
          pnpm run build:chrome
          mv eons-dev-launcher dist-chrome

      # -----------------------------------------------------------------------------
      # Package the Chrome and Firefox builds into ZIP files.
      # The version tag name is automatically appended to each filename.
      # -----------------------------------------------------------------------------
      - name: Create ZIP packages
        run: |
          cd dist-chrome
          zip -r ../eons-dev-launcher-chrome-${{ github.ref_name }}.zip .
          cd ../dist-firefox
          zip -r ../eons-dev-launcher-firefox-${{ github.ref_name }}.zip .
          cd ..

      # -----------------------------------------------------------------------------
      # Create a GitHub Release and upload the built ZIPs as release assets.
      # -----------------------------------------------------------------------------
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            eons-dev-launcher-chrome-${{ github.ref_name }}.zip
            eons-dev-launcher-firefox-${{ github.ref_name }}.zip
          generate_release_notes: true
          draft: false
          prerelease: false

      # -----------------------------------------------------------------------------
      # Publish the Firefox extension to Mozilla Add-ons (AMO).
      # Requires AMO_ISSUER and AMO_SECRET secrets to be set in repository settings.
      # -----------------------------------------------------------------------------
      - name: Publish to Mozilla Add-ons (AMO)
        run: |
          pnpm add -g web-ext
          web-ext sign \
            --source-dir=dist-firefox \
            --artifacts-dir=signed-artifacts \
            --api-key="${{ secrets.AMO_ISSUER }}" \
            --api-secret="${{ secrets.AMO_SECRET }}" \
            --channel=listed \
            --verbose \
            --no-input
        env:
          WEB_EXT_API_KEY: ${{ secrets.AMO_ISSUER }}
          WEB_EXT_API_SECRET: ${{ secrets.AMO_SECRET }}

      # -----------------------------------------------------------------------------
      # Upload the signed Firefox .xpi file to the same GitHub Release.
      # -----------------------------------------------------------------------------
      - name: Upload signed Firefox XPI to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: signed-artifacts/*.xpi
