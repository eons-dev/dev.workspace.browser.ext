name: Release

on:
  push:
    tags:
      - "v*"   # Triggers only when a tag starting with "v" (e.g. v1.0.0) is pushed

jobs:
  release:
    runs-on: ubuntu-latest
    name: Build & publish release

    # -----------------------------------------------------------------------------
    # GitHub requires "contents: write" permission for creating releases.
    # Without this, the softprops/action-gh-release step will fail with 403 errors.
    # -----------------------------------------------------------------------------
    permissions:
      contents: write

    steps:
      # -----------------------------------------------------------------------------
      # Checkout the repository at the tagged commit so that the build
      # represents the exact source snapshot being released.
      # -----------------------------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -----------------------------------------------------------------------------
      # Install pnpm first so setup-node can properly cache pnpmâ€™s store.
      # -----------------------------------------------------------------------------
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # -----------------------------------------------------------------------------
      # Install Node.js 22 and enable pnpm cache integration.
      # The combination of pnpm/action-setup and setup-node ensures
      # both consistent environment and fast rebuilds.
      # -----------------------------------------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'pnpm'

      # -----------------------------------------------------------------------------
      # Install dependencies exactly as locked in pnpm-lock.yaml.
      # -----------------------------------------------------------------------------
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # -----------------------------------------------------------------------------
      # Build the extension to produce the distributable files in /dist.
      # -----------------------------------------------------------------------------
      - name: Build extension
        run: pnpm build

      # -----------------------------------------------------------------------------
      # Package the Chrome (and optionally Firefox) versions into zip archives.
      # These archives will be uploaded as release assets.
      # -----------------------------------------------------------------------------
      - name: Create ZIP packages
        run: |
          cd dist
          zip -r ../eons-dev-launcher-chrome-${{ github.ref_name }}.zip .
          cd ..
          # To build and attach a Firefox variant, uncomment below:
          # cp -r dist dist-firefox
          # cd dist-firefox
          # zip -r ../eons-dev-launcher-firefox-${{ github.ref_name }}.zip .
          # cd ..

      # -----------------------------------------------------------------------------
      # Create a GitHub Release and upload artifacts automatically.
      # - softprops/action-gh-release@v2 handles both the release creation
      #   and asset upload.
      # - Using "with.token" (rather than env) is the new standard.
      # - The built-in ${{ secrets.GITHUB_TOKEN }} is automatically created
      #   for each workflow run; no manual setup required.
      # -----------------------------------------------------------------------------
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            eons-dev-launcher-chrome-${{ github.ref_name }}.zip
          generate_release_notes: true
          draft: false
          prerelease: false
